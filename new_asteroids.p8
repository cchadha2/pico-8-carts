pico-8 cartridge // http://www.pico-8.com
version 36
__lua__

speed = 2

centre = 64
edge = 128

ship_up_spr = 1
ship_rt_spr = 2
ship_diag_spr = 3

shot_fired = false
num_asteroids = 5
asteroids_active = true

pos = {}
asteroids = {}


-- directions laid out as
--
--          0
--
--      7       1
--
--  6								       2
--
--      5       3
--
--          4

up = 0
up_rt = 1
rt = 2
down_rt = 3
down = 4
down_lt = 5
lt = 6
up_lt = 7

function update_ship()
 if btnp(0) then 
		pos.me_x -= speed

		if pos.prev_dir == up then
			pos.sprite = ship_diag_spr
			pos.prev_dir = up_lt
		elseif pos.prev_dir == down then
			pos.sprite = ship_diag_spr
			pos.prev_dir = down_lt
		else
			pos.sprite = ship_rt_spr
			pos.prev_dir = lt
		end

		pos.face_left = true
	elseif btnp(1) then 
		pos.me_x += speed 

		if pos.prev_dir == up then
			pos.sprite = ship_diag_spr
			pos.prev_dir = up_rt
		elseif pos.prev_dir == down then
			pos.sprite = ship_diag_spr
			pos.prev_dir = down_rt
		else
			pos.sprite = ship_rt_spr
			pos.prev_dir = rt
		end

		pos.face_left = false
	elseif btnp(2) then 
		pos.me_y -= speed

		if pos.prev_dir == lt then
			pos.sprite = ship_diag_spr
			pos.prev_dir = up_lt
		elseif pos.prev_dir == rt then
			pos.sprite = ship_diag_spr
			pos.prev_dir = up_rt
		else
			pos.sprite = ship_up_spr
			pos.prev_dir = up
		end

		pos.face_down = false
	elseif btnp(3) then 
		pos.me_y += speed

		if pos.prev_dir == lt then
			pos.sprite = ship_diag_spr
			pos.prev_dir = down_lt
		elseif pos.prev_dir == rt then
			pos.sprite = ship_diag_spr
			pos.prev_dir = down_rt
		else
			pos.sprite = ship_up_spr
			pos.prev_dir = down
		end

		pos.face_down = true
	end
	
	pos.shot_dir = pos.prev_dir
	pos.me_x %= edge
	pos.me_y %= edge
end

function update_shot()
	if (btnp(5)
		   and not shot_fired) then
		pos.shot_x = pos.me_x
		pos.shot_y = pos.me_y

		if pos.shot_dir == up then
			pos.shot_x_inc = 0
			pos.shot_y_inc = -(speed * 2)
		elseif pos.shot_dir == up_rt then
			pos.shot_x_inc = (speed * 2)
			pos.shot_y_inc = -(speed * 2)
		elseif pos.shot_dir == rt then
			pos.shot_x_inc = (speed * 2)
			pos.shot_y_inc = 0
		elseif pos.shot_dir == down_rt then
			pos.shot_x_inc = (speed * 2)
			pos.shot_y_inc = (speed * 2)
		elseif pos.shot_dir == down then
			pos.shot_x_inc = 0
			pos.shot_y_inc = (speed * 2)
		elseif pos.shot_dir == down_lt then
			pos.shot_x_inc = -(speed * 2)
			pos.shot_y_inc = (speed * 2)
		elseif pos.shot_dir == lt then
			pos.shot_x_inc = -(speed * 2)
			pos.shot_y_inc = 0
		elseif pos.shot_dir == up_lt then
			pos.shot_x_inc = -(speed * 2)
			pos.shot_y_inc = -(speed * 2)
		end

		shot_fired = true
		end

	if shot_fired then
		pos.shot_x += pos.shot_x_inc
		pos.shot_y += pos.shot_y_inc
		if (pos.shot_x < 0
	 				or pos.shot_x >= edge
					 or pos.shot_y < 0
						or pos.shot_y >= edge) then
			shot_fired = false
		end
	end
end

function update_asteroids()
	for i=0,num_asteroids do
		if asteroids[i] then
			ast_name = "ast" .. tostr(i)
			x_coord = ast_name .. "_x"
			y_coord = ast_name .. "_y" 

			if (
				(
					(
				  (pos.shot_x + 2) >= (pos[x_coord] - 2)
					)
 			and (
						(pos.shot_x - 2) <= (pos[x_coord] + 2)
			 	)
			 )
			and (
			(
					(pos.shot_y + 2) >= (pos[y_coord] - 2)
					)
			and (
					(pos.shot_y - 2) <= (pos[y_coord] + 2)
					)
				)
			)
							then
				asteroids[i] = false
			end
		end
	end
end

function draw_ast(num)
	if asteroids[num] then
		ast_name = "ast" .. tostr(num)
		spr(
				5,
				pos[ast_name .. "_x"],
				pos[ast_name .. "_y"]
			)
		end
end

function _init()
	pos.sprite = 1
	pos.prev_dir = 0
	pos.shot_dir = pos.prev_dir
	pos.face_left = false
	pos.face_down = pos.face_left

 pos.me_x = centre
 pos.me_y = centre


	for i=0,num_asteroids do
		ast_name = "ast" .. tostr(i)
		x_coord = ast_name .. "_x"
		y_coord = ast_name .. "_y" 

		pos[x_coord] = rnd({
			flr(rnd(centre) - 20), 
			centre + 10 + flr(rnd(edge)), 
			}
		)
		pos[y_coord] = rnd({
			flr(rnd(centre) - 20), 
			centre + 10 + flr(rnd(edge)), 
			}
		)
		add(asteroids, true)
	end
end

function _update()
	update_ship()
	update_shot()
	if shot_fired then
		update_asteroids()
	end
end

function _draw()
	cls()

	spr(
		pos.sprite,
		pos.me_x,
		pos.me_y,
		1,
		1,
		pos.face_left,
		pos.face_down
	)

	if shot_fired then
		spr(
			4,
			pos.shot_x,
			pos.shot_y
		)
	end

	for i=0,num_asteroids do
		draw_ast(i)
	end
		
end

__gfx__
000000000000000000cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00aaaa000006600000ccc000cccc6660000000000000000000066000000660000000000000000000000000000000000000000000000000000000000000000000
0aa22aa000666600000cc6000cccc660000aa0000002200000666600006666000000000000000000000000000000000000000000000000000000000000000000
0a2aa2a00cccccc000ccc660000ccc6000a77a00002aa2000cccccc00cccccc00000000000000000000000000000000000000000000000000000000000000000
0a2aa2a0cccccccc00ccc660000cccc000a77a00002aa200cccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000
0aa22aa0cc0cc0cc000cc60000000cc0000aa00000022000ccaccaccccaccacc0000000000000000000000000000000000000000000000000000000000000000
00aaaa000000000000ccc00000000cc0000000000000000000a00a0000a00a000000000000000000000000000000000000000000000000000000000000000000
000000000000000000cc0000000000c0000000000000000000000000009009000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000e0000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000e0000000000000000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000e0000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
